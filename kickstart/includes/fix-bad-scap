# We have three approaches here:
# 1. don't fix things that are broken - obviously the wrong choice in general
# 2. fix it by shipping a custom profile that disables the broken stuff
# which is bad b/c then we're carrying custom profiles
# 3. fix it for now and wait until the tools make it easier to disable 
# individual checks and remedidation:
# https://github.com/OpenSCAP/openscap/issues/633
# We'll go with #3 and wait for the tools to catch up

systemctl stop kdump.service
systemctl disable kdump.service
systemctl mask kdump.service

# If we are not using firewalld, disable it and turn on iptables
if [ x"$CONFIG_ENABLE_FIREWALLD" != "xy" ]; then
systemctl disable firewalld
systemctl mask firewalld
systemctl enable iptables
systemctl enable ip6tables
fi

# https://github.com/OpenSCAP/scap-security-guide/issues/1435
sed -i -e 's/cbcMACs/cbc\nMACS/' /etc/ssh/sshd_config 

# use right UID for auid range
UID_MIN=$(awk '/^[\s]*UID_MIN/{ print $2; }' /etc/login.defs)

# This *appears* to be fixed now and the following results in a vad audit.rules with dupes.
#cat <<EOF >>/etc/audit/rules.d/failed-file-mod.rules
#-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=4294967295 -F key=access
#-a always,exit -F arch=b32 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=4294967295 -F key=access
#-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EACCES -F auid>=${UID_MIN} -F auid!=4294967295 -F key=access
#-a always,exit -F arch=b64 -S creat,open,openat,open_by_handle_at,truncate,ftruncate -F exit=-EPERM -F auid>=${UID_MIN} -F auid!=4294967295 -F key=access
#EOF

# CCE-80393-2
# CCI-000172 (NIST SP 800-53: AU-12 c; NIST SP 800-53A: AU-12.1 (iv); NIST SP 800-53 Rev 4: AU-12 c)
# CCI-002884 (NIST SP 800-53 Rev 4: MA-4 (1) (a))
cat <<-EOF >>/etc/audit/rules.d/seutil.rules
	-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -F key=privileged-priv_change
	-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -F key=privileged-priv_change
	-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -F key=privileged-priv_change
	-a always,exit -F path=/usr/sbin/setfiles -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -F key=privileged-priv_change
EOF

# CCE-80399-9
# CCI-000135 (NIST SP 800-53: AU-3 (1); NIST SP 800-53A: AU-3 (1).1 (ii); NIST SP 800-53 Rev 4: AU-3 (1))
# CCI-000172 (NIST SP 800-53: AU-12 c; NIST SP 800-53A: AU-12.1 (iv); NIST SP 800-53 Rev 4: AU-12 c)
# CCI-002884 (NIST SP 800-53 Rev 4: MA-4 (1) (a))
echo "-a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -k privileged-passwd" >> /etc/audit/rules.d/userhelper.rules

# CCE-27461-3
# CCI-000130 (NIST SP 800-53: AU-3; NIST SP 800-53A: AU-3.1; NIST SP 800-53 Rev 4: AU-3)
# CCI-000135 (NIST SP 800-53: AU-3 (1); NIST SP 800-53A: AU-3 (1).1 (ii); NIST SP 800-53 Rev 4: AU-3 (1))
# CCI-000172 (NIST SP 800-53: AU-12 c; NIST SP 800-53A: AU-12.1 (iv); NIST SP 800-53 Rev 4: AU-12 c)
# CCI-002884 (NIST SP 800-53 Rev 4: MA-4 (1) (a))
cat <<-EOF >>/etc/audit/rules.d/sudoer.rules
	-w /etc/sudoers -p wa -k privileged-actions
	-w /etc/sudoers.d/ -p wa -k privileged-actions
EOF

cat <<-EOF > /etc/audit/rules.d/postfix.rules
	# CCE-80406-2
	# CCI-000135 (NIST SP 800-53: AU-3 (1); NIST SP 800-53A: AU-3 (1).1 (ii); NIST SP 800-53 Rev 4: AU-3 (1))
	# CCI-002884 (NIST SP 800-53 Rev 4: MA-4 (1) (a))
	-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -k privileged-postfix"
	# CCE-80407-0
	# CCI-000135 (NIST SP 800-53: AU-3 (1); NIST SP 800-53A: AU-3 (1).1 (ii); NIST SP 800-53 Rev 4: AU-3 (1))
	# CCI-002884 (NIST SP 800-53 Rev 4: MA-4 (1) (a))
	-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=${UID_MIN} -F auid!=4294967295 -k privileged-postfix"
EOF

cat <<-EOF > /etc/audit/rules.d/module.rules
	# CCE-80414-6
	# CCI-000172 (NIST SP 800-53: AU-12 c; NIST SP 800-53A: AU-12.1 (iv); NIST SP 800-53 Rev 4: AU-12 c)
	-a always,exit -F arch=b32 -S init_module -k module-change
	-a always,exit -F arch=b64 -S init_module -k module-change

	# CCE-80415-3
	# CCI-000172 (NIST SP 800-53: AU-12 c; NIST SP 800-53A: AU-12.1 (iv); NIST SP 800-53 Rev 4: AU-12 c)
	-a always,exit -F arch=b32 -S delete_module -k module-change
	-a always,exit -F arch=b64 -S delete_module -k module-change
EOF


# SSG that ships in RHEL 7.5 for auditd had loose regexs and was catching more than it should.
# which led to space_left <= admin_space_left which prevents auditd from starting.
# content was producing dupe
# space_left entries and failed to set action vars
sed -i '/^admin_space_left.*=.*$/d' /etc/audit/auditd.conf
sed -i '/^space_left.*=.*$/d' /etc/audit/auditd.conf

cat <<-EOF >> /etc/audit/auditd.conf
	space_left = 75
	space_left_action = email
	admin_space_left = 50
	admin_space_left_action = single
EOF

# fix-up all hard-coded references to auid 1000
for f in /etc/audit/rules.d/*.rules; do
        sed -i "s/auid>=1000/auid>=${UID_MIN}/g" ${f}
done

sed -i -e 's/.*PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i -e 's/#\s*RSAAuthentication .*/RSAAuthentication yes/' /etc/ssh/sshd_config
sed -i -e 's/#\s*PubkeyAuthentication .*/PubkeyAuthentication yes/' /etc/ssh/sshd_config

sed -i -e 's/^[\s#]*StrictModes.*/StrictModes yes/' /etc/ssh/sshd_config
sed -i -e 's/^[\s#]*GSSAPIAuthentication .*/GSSAPIAuthentication no/g' /etc/ssh/sshd_config

# CCE-80221-5
sed -i -e 's/^[\s#]*KerberosAuthentication.*/KerberosAuthentication no/g' /etc/ssh/sshd_config

# CCE-80224-9
sed -i -e 's/^[\s#]*Compression.*/Compression no/g' /etc/ssh/sshd_config

/usr/sbin/sshd-keygen

# CCE-27311-0
chmod 0644 /etc/ssh/*.pub

# disable default public snmp community
# CCE-27386-2
sed -i -e 's/^\([\s#]*com2sec notConfigUser default public\)/# CCE-27386-2 \n# \1/' /etc/snmp/snmpd.conf

# sudo chmod 0600 /etc/ssh/*_key
chmod 0600 /etc/ssh/*_key

echo "# CCE-80179-5" >> /etc/sysctl.conf
echo "net.ipv6.conf.all.accept_source_route = 0" >> /etc/sysctl.conf

# disable magic sysrq for good measure
echo "kernel.sysrq = 0" > /etc/sysctl.d/00-sysrq.conf

# CCE-27309-4
# dont use root/admin/administrator as bootloader user
sed -Ei -e 's/"root"/"toor"/g' -e 's/ root / toor /g' /etc/grub.d/01_users
grub2-mkconfig -o /etc/grub2.cfg
grub2-mkconfig -o /etc/grub2-efi.cfg

if [ -f /etc/default/grub ]; then
        /sbin/grubby --update-kernel=ALL --remove-args="fips"
        /sbin/grubby --update-kernel=ALL --args="fips=1"
        if grep -q '^GRUB_CMDLINE_LINUX=.*fips=.*"'  /etc/default/grub; then
                # modify the GRUB command-line if a fips= arg already exists
                sed -i 's/\(^GRUB_CMDLINE_LINUX=".*\)fips=[^[:space:]]*\(.*"\)/\1 fips=1 \2/'  /etc/default/grub
        else
                # no existing fips=arg is present, append it
                sed -i 's/\(^GRUB_CMDLINE_LINUX=".*\)"/\1 fips=1"/'  /etc/default/grub
        fi

	# re-enable USB
	grubby --update-kernel=ALL --remove-args=nousb
	sed -i "s/nousb//g" /etc/default/grub

	# SSG content fails to snag the right device hosting /boot
	# which causes panics on boot when fips is enabled
	BOOT_DEV=$(df --output=source /boot/ | tail -1)
	BOOT_DEV=$(lsblk -no UUID ${BOOT_DEV})

	/sbin/grubby --update-kernel=ALL --remove-args="boot"
	/sbin/grubby --update-kernel=ALL --args="boot=UUID=${BOOT_DEV}"
	if grep -q '^GRUB_CMDLINE_LINUX=".*boot=.*"' /etc/default/grub; then
		sed -i 's|\(^GRUB_CMDLINE_LINUX=.*\)boot=[^[:space:]]*\(.*"\)|\1 boot=UUID='"${BOOT_DEV}"' \2|' /etc/default/grub
	else
		sed -i 's|\(^GRUB_CMDLINE_LINUX=.*\)"|\1 boot=UUID='"${BOOT_DEV}"'"|' /etc/default/grub
	fi
fi

# relocate faillock from non-persistent /var/run
mkdir -p /var/log/faillock
for f in /etc/pam.d/*; do
	if [ -f ${f} ]; then
		sed -i -e 's;\(.*pam_faillock\.so\)\(.*\);\1 \2 dir=/var/log/faillock;' ${f}
	fi
done

# STIG apparently wants 8 but SSG says 5
sed -i -e 's/^difok.*/difok = 8/' /etc/security/pwquality.conf

# STIG says 4, SSG said 2 
if ! grep -q '^maxclassrepeat[\s]*=[\s]*(-?\d+)(?:[\s]|$)' /etc/security/pwquality.conf; then
        echo -e "\nmaxclassrepeat = 4" >> /etc/security/pwquality.conf
else
        sed -i -e 's/^maxclassrepeat.*/maxclassrepeat = 4/' /etc/security/pwquality.conf
fi

# STIG says 4, SSG said 2 (fixed in v0.1.40(
if ! grep -q '^maxrepeat[\s]*=[\s]*(-?\d+)(?:[\s]|$)' /etc/security/pwquality.conf; then
        echo -e "\nmaxrepeat = 3" >> /etc/security/pwquality.conf
else
        sed -i -e 's/^maxrepeat.*/maxrepeat = 3/' /etc/security/pwquality.conf
fi

# FIXME: this would squash a failure, but pwhistory isn't even present in our pam conf
# SSG content doesn't do system-auth-ac, only system-auth
#if grep -q '^\s*password\s+(?:(?:requisite)|(?:required))\s+pam_pwhistory\.so[^#\n\r]*remember=([0-9]*).*$' /etc/pam.d/system-auth-ac; then
#       sed -i -e 's/\(\s*password\s+(?:(?:requisite)|(?:required))\s+pam_pwhistory\.so[^#\n\r]*\)remember=\(.*\)/\1 remember=5 \2/' /etc/pam.d/system-auth-ac
#else
#       sed -i -e 's/\(\s*password\s+(?:(?:requisite)|(?:required))\s+pam_pwhistory\.so[^#\n\r]*\)/\1 remember=5/' /etc/pam.d/system-auth-ac
#fi

if grep -E -q 'password.*pam_pwquality\.so.*retry=([0-9]*).*$' /etc/pam.d/system-auth-ac; then
       sed -i -e 's/\(\s*password.*pam_pwquality\.so.*\)retry=.?\(.*\)/\1 retry=1 \2/' /etc/pam.d/system-auth-ac
else
       sed -i -e 's/\(\s*password.*pam_pwquality\.so.*\)/\1 retry=1/' /etc/pam.d/system-auth-ac
fi

#CCE-80347-8
#CCI-001749 (NIST SP 800-53 Rev 4: CM-5 (3))
yum-config-manager --save --setopt="localpkg_gpgcheck=1"
#CCE-80348-6
#CCI-001749 (NIST SP 800-53 Rev 4: CM-5 (3))
yum-config-manager --save --setopt="repo_gpgcheck=1"
# CCE-80346-0
# CCI-002617 (NIST SP 800-53 Rev 4: SI-2 (6))
yum-config-manager --save --setopt="clean_requirements_on_remove=1"

# panic on audit failures
# CCE-80381-7
# CCI-000139 (NIST SP 800-53: AU-5 a; NIST SP 800-53A: AU-5.1 (ii); NIST SP 800-53 Rev 4: AU-5 a)
echo -e '\n-f 2' >> /etc/audit/rules.d/audit.rules

echo \-D >> /etc/audit/rules.d/audit.rules

echo '-b 65536' >> /etc/audit/rules.d/audit.rules

# fix rule file perms
chmod 600 /etc/audit/rules.d/*

# strip dupes caused by broken SSG
#
for f in /etc/audit/rules.d/*; do
        awk '!seen[$0]++' "${f}" > "/tmp/$(basename ${f})"; mv -f /tmp/"$(basename ${f})" /etc/audit/rules.d/
done

# fix dupe priv rules since SSG isn't collapsing things like auid!=unset with the existing auid!=4294967295 rules
# Without these fixes the audit rulesets will fail to load into auditd
fix_audit_priv_rule() {
        # FIXME: i can't get delete to work properly. sed dies with unterminated address regex errors.
        sed -i -e "s;-a always,exit -F path=$1 -F perm=x -F auid>=1000 -F auid!=unset -k privileged;;" /etc/audit/rules.d/privileged.rules
        sed -i -e "s;\(-a always,exit -F path=$1 -F perm=x -F auid>=1000 -F auid!=4294967295\) \(-F key=privileged\);\1 -F auid!=unset \2;" /etc/audit/rules.d/privileged.rules
}

fix_audit_priv_rule /usr/bin/passwd
fix_audit_priv_rule /usr/bin/gpasswd
fix_audit_priv_rule /usr/bin/chage
fix_audit_priv_rule /usr/bin/chsh
fix_audit_priv_rule /usr/bin/chage
fix_audit_priv_rule /usr/bin/crontab
fix_audit_priv_rule /usr/bin/umount
fix_audit_priv_rule /usr/bin/sudo
fix_audit_priv_rule /usr/bin/su
fix_audit_priv_rule /usr/bin/newgrp
fix_audit_priv_rule /usr/sbin/pam_timestamp_check
fix_audit_priv_rule /usr/sbin/unix_chkpwd
fix_audit_priv_rule /usr/sbin/userhelper
fix_audit_priv_rule /usr/libexec/openssh/ssh-keysign

# now that the audit rules are ready, pre-gen audit.rules and switch to loading them with auditctl
# this avoids writes to audit.rules at boot. also, strip dash in unit to cause failures on error.
rm -f /etc/audit/audit.rules
augenrules

# override the use of augenrules in the audit unit in facor of auditctl
mkdir -p /etc/systemd/system/auditd.service.d
cat <<-EOF > /etc/systemd/system/auditd.service.d/override.conf
	[Service]
	ExecStartPost=
	ExecStartPost=/sbin/auditctl -R /etc/audit/audit.rules
	# there is a race on boot when rules can't be loaded and audit comes down so restart it always
	# this is only an issue in CLIP since we convert a non-fatal ExecStartPost=- to a fatal ExecStartPost= (intentionally)
	Restart=always
EOF

# CCE-27277-3
echo "install usb-storage /bin/true" > /etc/modprobe.d/usb-storage.conf

# FIX content_rule_set_firewalld_default_zone that doesn't have SSG fix yet
if grep -q '^.*DefaultZone=.*'  /etc/firewalld/firewalld.conf; then
       # modify the DefaultZone
       sed -i 's/\(^.*\)DefaultZone=[^[:space:]]*\(.*\)/\1DefaultZone=drop\2/' /etc/firewalld/firewalld.conf
fi
